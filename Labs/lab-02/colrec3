#!/usr/bin/env python3
"Demonstrate content-based image retrieval using histograms"
import sys, math, cv2, numpy

# The number of bins in a histogram.
NBINS = 64

#------------------------------------------------------------------------------
def compare (h1, h2):
    "Work out the correlation between two histograms"
    sumx = sumy = sumxx = sumyy = sumxy = 0.0
    n = len (h1)
    for i in range (0, n):
        v1 = float (h1[i])
        v2 = float (h2[i])
        sumx += v1
        sumy += v2
        sumxx += v1 * v1
        sumxy += v1 * v2
        sumyy += v2 * v2
    v1 = sumxy - sumx * sumy / n
    v2 = math.sqrt((sumxx-sumx*sumx/n) * (sumyy-sumy*sumy/n))
    return abs (v1 / v2)

def histogram (im):
    """Determine the histogram of an image -- simple version copied from
    lab-01's summarize program."""
    MAXGREY = 256

    # We shall fill the array hist with the histogram.
    hist_red = numpy.zeros (MAXGREY)
    hist_green = numpy.zeros (MAXGREY)
    hist_blue = numpy.zeros (MAXGREY)
    hist_appended = []

    # Get the image sizes.
    sizes = im.shape
    if len (sizes) == 2:
        # it's monochrome
        ny = sizes (0)
        nx = sizes (1)
        nc = 1
    else:
        # it has several channels
        ny, nx, nc = sizes

    if nc != 1:
        # Work through the channe;s, accumulating each histogram.
        for y in range (0, ny):
            for x in range (0, nx):
                hist_red[int (im[y,x,2])] += 1
                hist_blue[int (im[y,x,1])] += 1
                hist_green[int (im[y,x,0])] += 1
        hist_appended = numpy.append(hist_appended, hist_red)
        hist_appended = numpy.append(hist_appended, hist_green)
        hist_appended = numpy.append(hist_appended, hist_blue)
    else:
        for y in range (0, ny):
            for x in range (0, nx):
                hist_appended[int (im[y,x,1])] += 1

    # Return the histogram we have computed.
    return numpy.array(hist_appended)

#------------------------------------------------------------------------------
# Say hello and initialize things.
if len(sys.argv) < 3:
    print ("Usage:", sys.argv[0], "<probe> <test-images>", file=sys.stderr)
    sys.exit (1)
probe_file = sys.argv[1]
v_best = 0
f_best = "?"

# Read in the probe image and find its histogram.
im = cv2.imread (probe_file)
probe = histogram (im)

# We now enter the main loop.  The basic idea is to load an image, find its
# histogram, then compare that with the histogram of the probe image.  We are
# careful to skip the case when the test image is the same as the probe.
for file in sys.argv[2:]:
    if file != probe_file:
        im = cv2.imread (file)
        h = histogram (im)
        v = compare (probe, h)
        if v > v_best:
            v_best = v
            f_best = file

# We've finished our work, so say which of the test set best matches the
# probe and exit.
print (f_best)
